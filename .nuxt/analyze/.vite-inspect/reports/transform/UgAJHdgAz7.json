{
  "resolvedId": "C:/Users/Nick/Desktop/PersonalWebsite/node_modules/@nuxt/content/dist/runtime/legacy/composables/navigation.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { hash } from \"ohash\";\nimport { useRuntimeConfig } from \"#app\";\nimport { encodeQueryParams } from \"../../utils/query.mjs\";\nimport { jsonStringify } from \"../../utils/json.mjs\";\nimport { addPrerenderPath, shouldUseClientDB, withContentBase } from \"../../composables/utils.mjs\";\nimport { useContentPreview } from \"../../composables/preview.mjs\";\nimport { queryContent } from \"./query.mjs\";\nexport const fetchContentNavigation = async (queryBuilder) => {\n  const { content } = useRuntimeConfig().public;\n  if (typeof queryBuilder?.params !== \"function\") {\n    queryBuilder = queryContent(queryBuilder);\n  }\n  const params = queryBuilder.params();\n  const apiPath = content.experimental.stripQueryParameters ? withContentBase(`/navigation/${process.dev ? \"_\" : `${hash(params)}.${content.integrity}`}/${encodeQueryParams(params)}.json`) : withContentBase(process.dev ? `/navigation/${hash(params)}` : `/navigation/${hash(params)}.${content.integrity}.json`);\n  if (!process.dev && process.server) {\n    addPrerenderPath(apiPath);\n  }\n  if (shouldUseClientDB()) {\n    const generateNavigation = await import(\"./client-db\").then((m) => m.generateNavigation);\n    return generateNavigation(params);\n  }\n  const data = await $fetch(apiPath, {\n    method: \"GET\",\n    responseType: \"json\",\n    params: content.experimental.stripQueryParameters ? void 0 : {\n      _params: jsonStringify(params),\n      previewToken: useContentPreview().getPreviewToken()\n    }\n  });\n  if (typeof data === \"string\" && data.startsWith(\"<!DOCTYPE html>\")) {\n    throw new Error(\"Not found\");\n  }\n  return data;\n};\n",
      "start": 1702088882650,
      "end": 1702088883042,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1702088883042,
      "end": 1702088883042,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1702088883042,
      "end": 1702088883042,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1702088883042,
      "end": 1702088883042,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1702088883042,
      "end": 1702088883042,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702088883043,
      "end": 1702088883043,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702088883043,
      "end": 1702088883043,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702088883043,
      "end": 1702088883043,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702088883043,
      "end": 1702088883043,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1702088883043,
      "end": 1702088883043,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1702088883043,
      "end": 1702088883043,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1702088883043,
      "end": 1702088883043,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1702088883048,
      "end": 1702088883048,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1702088883050,
      "end": 1702088883057,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1702088883059,
      "end": 1702088883059,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1702088883066,
      "end": 1702088883066,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1702088883067,
      "end": 1702088883067,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "import { hash } from \"ohash\";\nimport { useRuntimeConfig } from \"#app\";\nimport { encodeQueryParams } from \"../../utils/query.mjs\";\nimport { jsonStringify } from \"../../utils/json.mjs\";\nimport { addPrerenderPath, shouldUseClientDB, withContentBase } from \"../../composables/utils.mjs\";\nimport { useContentPreview } from \"../../composables/preview.mjs\";\nimport { queryContent } from \"./query.mjs\";\nexport const fetchContentNavigation = async (queryBuilder) => {\n  const { content } = useRuntimeConfig().public;\n  if (typeof queryBuilder?.params !== \"function\") {\n    queryBuilder = queryContent(queryBuilder);\n  }\n  const params = queryBuilder.params();\n  const apiPath = content.experimental.stripQueryParameters ? withContentBase(`/navigation/${false ? \"_\" : `${hash(params)}.${content.integrity}`}/${encodeQueryParams(params)}.json`) : withContentBase(false ? `/navigation/${hash(params)}` : `/navigation/${hash(params)}.${content.integrity}.json`);\n  if (!false && false) {\n    addPrerenderPath(apiPath);\n  }\n  if (shouldUseClientDB()) {\n    const generateNavigation = await import(\"./client-db\").then((m) => m.generateNavigation);\n    return generateNavigation(params);\n  }\n  const data = await $fetch(apiPath, {\n    method: \"GET\",\n    responseType: \"json\",\n    params: content.experimental.stripQueryParameters ? void 0 : {\n      _params: jsonStringify(params),\n      previewToken: useContentPreview().getPreviewToken()\n    }\n  });\n  if (typeof data === \"string\" && data.startsWith(\"<!DOCTYPE html>\")) {\n    throw new Error(\"Not found\");\n  }\n  return data;\n};\n",
      "start": 1702088883067,
      "end": 1702088883067,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "vite:css-post",
      "start": 1702088883067,
      "end": 1702088883067,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702088883067,
      "end": 1702088883067,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702088883067,
      "end": 1702088883067,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702088883069,
      "end": 1702088883069,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1702088883069,
      "end": 1702088883069,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702088883069,
      "end": 1702088883069,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702088883069,
      "end": 1702088883069,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1702088883070,
      "end": 1702088883070,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1702088883070,
      "end": 1702088883070,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1702088883070,
      "end": 1702088883070,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1702088883070,
      "end": 1702088883070,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1702088883070,
      "end": 1702088883070,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1702088883070,
      "end": 1702088883070,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1702088883071,
      "end": 1702088883071,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1702088883071,
      "end": 1702088883071,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "result": "import { __vitePreload } from \"\u0000vite/preload-helper\";import { hash } from \"ohash\";\nimport { useRuntimeConfig } from \"#app\";\nimport { encodeQueryParams } from \"../../utils/query.mjs\";\nimport { jsonStringify } from \"../../utils/json.mjs\";\nimport { addPrerenderPath, shouldUseClientDB, withContentBase } from \"../../composables/utils.mjs\";\nimport { useContentPreview } from \"../../composables/preview.mjs\";\nimport { queryContent } from \"./query.mjs\";\nexport const fetchContentNavigation = async (queryBuilder) => {\n  const { content } = useRuntimeConfig().public;\n  if (typeof queryBuilder?.params !== \"function\") {\n    queryBuilder = queryContent(queryBuilder);\n  }\n  const params = queryBuilder.params();\n  const apiPath = content.experimental.stripQueryParameters ? withContentBase(`/navigation/${false ? \"_\" : `${hash(params)}.${content.integrity}`}/${encodeQueryParams(params)}.json`) : withContentBase(false ? `/navigation/${hash(params)}` : `/navigation/${hash(params)}.${content.integrity}.json`);\n  if (!false && false) {\n    addPrerenderPath(apiPath);\n  }\n  if (shouldUseClientDB()) {\n    const generateNavigation = await __vitePreload(() => import(\"./client-db\"),__VITE_IS_MODERN__?\"__VITE_PRELOAD__\":void 0,import.meta.url).then((m) => m.generateNavigation);\n    return generateNavigation(params);\n  }\n  const data = await $fetch(apiPath, {\n    method: \"GET\",\n    responseType: \"json\",\n    params: content.experimental.stripQueryParameters ? void 0 : {\n      _params: jsonStringify(params),\n      previewToken: useContentPreview().getPreviewToken()\n    }\n  });\n  if (typeof data === \"string\" && data.startsWith(\"<!DOCTYPE html>\")) {\n    throw new Error(\"Not found\");\n  }\n  return data;\n};\n",
      "start": 1702088883071,
      "end": 1702088883071,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "vite:reporter",
      "start": 1702088883071,
      "end": 1702088883071,
      "order": "normal"
    }
  ]
}
