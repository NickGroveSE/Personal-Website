{
  "resolvedId": "C:/Users/Nick/Desktop/PersonalWebsite/node_modules/scule/dist/index.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "const NUMBER_CHAR_RE = /\\d/;\nconst STR_SPLITTERS = [\"-\", \"_\", \"/\", \".\"];\nfunction isUppercase(char = \"\") {\n  if (NUMBER_CHAR_RE.test(char)) {\n    return void 0;\n  }\n  return char.toUpperCase() === char;\n}\nfunction splitByCase(string_, separators) {\n  const splitters = separators ?? STR_SPLITTERS;\n  const parts = [];\n  if (!string_ || typeof string_ !== \"string\") {\n    return parts;\n  }\n  let buff = \"\";\n  let previousUpper;\n  let previousSplitter;\n  for (const char of string_) {\n    const isSplitter = splitters.includes(char);\n    if (isSplitter === true) {\n      parts.push(buff);\n      buff = \"\";\n      previousUpper = void 0;\n      continue;\n    }\n    const isUpper = isUppercase(char);\n    if (previousSplitter === false) {\n      if (previousUpper === false && isUpper === true) {\n        parts.push(buff);\n        buff = char;\n        previousUpper = isUpper;\n        continue;\n      }\n      if (previousUpper === true && isUpper === false && buff.length > 1) {\n        const lastChar = buff[buff.length - 1];\n        parts.push(buff.slice(0, Math.max(0, buff.length - 1)));\n        buff = lastChar + char;\n        previousUpper = isUpper;\n        continue;\n      }\n    }\n    buff += char;\n    previousUpper = isUpper;\n    previousSplitter = isSplitter;\n  }\n  parts.push(buff);\n  return parts;\n}\nfunction upperFirst(string_) {\n  return !string_ ? \"\" : string_[0].toUpperCase() + string_.slice(1);\n}\nfunction lowerFirst(string_) {\n  return !string_ ? \"\" : string_[0].toLowerCase() + string_.slice(1);\n}\nfunction pascalCase(string_) {\n  return !string_ ? \"\" : (Array.isArray(string_) ? string_ : splitByCase(string_)).map((p) => upperFirst(p)).join(\"\");\n}\nfunction camelCase(string_) {\n  return lowerFirst(pascalCase(string_));\n}\nfunction kebabCase(string_, joiner) {\n  return !string_ ? \"\" : (Array.isArray(string_) ? string_ : splitByCase(string_)).map((p) => p.toLowerCase()).join(joiner ?? \"-\");\n}\nfunction snakeCase(string_) {\n  return kebabCase(string_, \"_\");\n}\n\nexport { camelCase, isUppercase, kebabCase, lowerFirst, pascalCase, snakeCase, splitByCase, upperFirst };\n",
      "start": 1702088884168,
      "end": 1702088884195,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1702088884195,
      "end": 1702088884195,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1702088884195,
      "end": 1702088884195,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1702088884195,
      "end": 1702088884195,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1702088884195,
      "end": 1702088884195,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702088884195,
      "end": 1702088884195,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702088884195,
      "end": 1702088884195,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702088884195,
      "end": 1702088884195,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702088884195,
      "end": 1702088884195,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1702088884195,
      "end": 1702088884195,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1702088884195,
      "end": 1702088884195,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1702088884195,
      "end": 1702088884196,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1702088884196,
      "end": 1702088884196,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1702088884196,
      "end": 1702088884196,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1702088884196,
      "end": 1702088884196,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1702088884196,
      "end": 1702088884196,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1702088884196,
      "end": 1702088884196,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702088884196,
      "end": 1702088884196,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702088884196,
      "end": 1702088884196,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702088884196,
      "end": 1702088884196,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702088884196,
      "end": 1702088884196,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702088884196,
      "end": 1702088884196,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1702088884196,
      "end": 1702088884196,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702088884196,
      "end": 1702088884196,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702088884196,
      "end": 1702088884196,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1702088884196,
      "end": 1702088884196,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1702088884197,
      "end": 1702088884197,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1702088884197,
      "end": 1702088884197,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1702088884197,
      "end": 1702088884197,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1702088884197,
      "end": 1702088884197,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1702088884197,
      "end": 1702088884197,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1702088884197,
      "end": 1702088884197,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1702088884197,
      "end": 1702088884197,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702088884197,
      "end": 1702088884197,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702088884197,
      "end": 1702088884197,
      "order": "normal"
    }
  ]
}
